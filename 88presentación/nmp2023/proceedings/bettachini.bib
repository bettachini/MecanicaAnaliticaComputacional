@book{waldrop_dream_2001,
	title = {The  Dream Machine: J.C.R. Licklider and the Revolution That Made Computing Personal},
	isbn = {978-0-670-89976-0},
	shorttitle = {The  Dream Machine},
	abstract = {From the Publisher: The year is 1962. More than a decade will pass before personal computers emerge from the garages of Silicon Valley, and a full thirty years before the Internet explosion of the 1990s. The word computer still has an ominous tone, conjuring up the image of a huge, intimidating device hidden away in an overlit, air-conditioned basement, relentlessly processing punch cards for some large institution: them. Yet, sitting in a nondescript office in Robert {McNamara}'s Pentagon, a quiet forty-seven-year-old civilian is already planning the revolution that will change forever the way computers are perceived. Somehow, the occupant of that office - a former {MIT} psychologist named J. C. R. Licklider - has seen a future in which computers will empower individuals, instead of forcing them into rigid conformity. He is almost alone in his conviction that computers can become not just superfast calculating machines but joyful machines: tools that will serve as new media of expression, inspirations to creativity, and gateways to a vast world of on line information. And now he is determined to use the Pentagon's money to make that vision a reality.},
	pagetotal = {528},
	publisher = {Viking Penguin},
	author = {Waldrop, M. Mitchell},
	date = {2001-07},
}

@book{papert_childrens_1993,
	location = {{USA}},
	title = {The children's machine: rethinking school in the age of the computer},
	isbn = {978-0-465-01830-7},
	shorttitle = {The children's machine},
	pagetotal = {241},
	publisher = {Basic Books, Inc.},
	author = {Papert, Seymour},
	date = {1993-05},
}

@article{roberts_impact_1980,
	title = {The Impact of Electronic Calculators on Educational Performance},
	volume = {50},
	issn = {0034-6543},
	url = {https://doi.org/10.3102/00346543050001071},
	doi = {10.3102/00346543050001071},
	abstract = {Thirty-four empirical studies at the elementary, secondary, and college level were reviewed concerning the impacts of electronic calculators on mathematics-related achievement and attitudes. The dominant research design was pretest-post test with the principal analytic procedure being {ANOVA}. In the typical study, an experimental group (usually one or more classes) was allowed to use calculators during their mathematics instruction whereas students in the control group were not. Results showed support for the computational benefits due to calculator use, especially when the calculators were also allowed on criterion tests. However, support for conceptual benefits was minimal. Hypothesized changes in general attitudes toward mathematics for those using calculators was unsupported, although effects on immediate and task-specific, affective measures were found. Interpretation of the results of many of the studies was hampered by defective research designs including assignment of students to conditions, contamination of treatment with control groups, control of the teacher variable, and the lack of use of calculators on the posttests.},
	pages = {71--98},
	number = {1},
	journaltitle = {Review of Educational Research},
	author = {Roberts, Dennis M.},
	urldate = {2024-01-06},
	date = {1980-03-01},
	langid = {english},
	note = {Publisher: American Educational Research Association},
}

@article{kurrer_konrad_2010,
	title = {Konrad Zuse und die Baustatik — Zur Formierung der Computerstatik (Teil 2)},
	volume = {87},
	issn = {0932-8351, 1437-0999},
	url = {https://onlinelibrary.wiley.com/doi/10.1002/bate.201010051},
	doi = {10.1002/bate.201010051},
	abstract = {Abstract
            Konrad Zuse verallgemeinerte  das 1934 mit seiner Studienarbeit am Beispiel der statisch unbestimmten Analyse entwickelte programmförmige Rechenschemata 1936 zum “Verfahren des Rechenplanes oder Programms” (Konrad Zuse). Von 1936 bis 1941 entfaltete er dieses Verfahren in erster Linie für die Bau‐ und Flugzeugstatik. Diese numerischen Rechenpläne bildeten eine wesentliche Seite der historisch‐logischen Entwicklung von Zuses programmgesteuerten Rechenautomaten Z1 (1938) und Z3 (1941). Mit den numerischen Rechenplänen ist auch die erste Stufe der Initialphase der Computerstatik benannt. Ihre zweite Stufe hebt mit Zuses Plankalkül an (1942—1949) — der ersten “Plattform für Softwareentwicklung” (Peter Jan Pahl ) — in dessen Zentrum sein allgemeines Konzept des Rechnens steht, das Zuse aus dem Kalkül‐Begriff der Mathematik entwickelt und das Zahlenrechnen als Sonderfall enthält. Die beiden Stufen werden im Folgenden eingehend dargestellt und durch eine exemplarische Skizze der um 1950 einsetzenden Konstituierungsphase der Computerstatik abgerundet.
            
              Konrad Zuse and the theory of structures — on the formation of computational mechanics (part 2).
              It was in 1936 that Konrad Zuse generalised the program‐type calculation scheme, which he had developed in his student project of 1934 using the example of the statically indeterminate analysis, to form the ”computing plan or program method” (Konrad Zuse). Between 1936 and 1941 he continued to develop this method, in the first place for structural and aviation engineering. These numerical computing plans formed one fundamental element in the historico‐logical evolution of Zuse’s program‐controlled automatic computers Z1 (1938) and Z3 (1941). The numerical computing plans also mark the first step in the initial phase of computational mechanics. The second step (1942—1949) began with Zuse’s ”Plankalkül” (Calculus of Programs) — the first ”software development platform” (Peter Jan Pahl) —, the heart of which is his general calculation concept, which Zuse developed from the formal system concept of mathematics and which contains numerical computation as a special case. Both of these steps are presented in detail below and rounded off with an illustrative outline of the constitution phase of computational mechanics which began around 1950.},
	pages = {763--783},
	number = {12},
	journaltitle = {Bautechnik},
	shortjournal = {Bautechnik},
	author = {Kurrer, Karl‐Eugen},
	urldate = {2024-01-05},
	date = {2010-12},
	langid = {german},
	file = {Kurrer - 2010 - Konrad Zuse und die Baustatik — Zur Formierung der.pdf:/home/vbettachini/storage/Zotero/storage/QYDK7TYL/Kurrer - 2010 - Konrad Zuse und die Baustatik — Zur Formierung der.pdf:application/pdf},
}

@book{simon_h_lavington_history_1975,
	title = {A history of Manchester computers},
	isbn = {978-0-85012-155-1},
	url = {http://archive.org/details/HistoryOfManchesterComputers},
	abstract = {…},
	publisher = {{NCC} Publications},
	author = {{Simon H. Lavington}},
	urldate = {2024-01-05},
	date = {1975},
	keywords = {manchester},
}

@article{kemeny_dartmouth_1968,
	title = {Dartmouth Time-Sharing},
	volume = {162},
	url = {https://www.science.org/doi/10.1126/science.162.3850.223},
	doi = {10.1126/science.162.3850.223},
	pages = {223--228},
	number = {3850},
	journaltitle = {Science},
	author = {Kemeny, John G. and Kurtz, Thomas E.},
	urldate = {2024-01-05},
	date = {1968-10-11},
	note = {Publisher: American Association for the Advancement of Science},
}

@incollection{tidball_using_1978,
	location = {Boston, {MA}},
	title = {Using Minicomputers for Courseware Delivery},
	isbn = {978-1-4684-2460-7},
	url = {https://doi.org/10.1007/978-1-4684-2460-7_14},
	series = {Computers in Biology and Medicine},
	abstract = {Much has been written about the development of computer-based instruction in institutions where this mode of teaching is well established. The signs of a nutritive environment include administrative backing, processing on large machines, availability of special-purpose {CAI} languages, high-level programming support for language refinement, staff deployment to encourage faculty authoring, and evidence of extramural financial support. The present communication does not emanate from such an environment. At the Medical Center of The George Washington University, {CAI} is a relative newcomer and has only been developed on a small scale. Accordingly, our experience may be of particular interest to those institutions that are contemplating the addition of this capability to their educational programs and are looking for an economical approach to such implementation.},
	pages = {229--241},
	booktitle = {Information Technology in Health Science Education},
	publisher = {Springer {US}},
	author = {Tidball, Charles S.},
	editor = {{DeLand}, Edward C.},
	urldate = {2024-01-05},
	date = {1978},
	langid = {english},
	doi = {10.1007/978-1-4684-2460-7_14},
	keywords = {Computer Language, Digital Equipment Corporation, Faculty Member, Practice Program, Simultaneous User},
}

@article{cope_little_2023,
	title = {A little history of e-learning: finding new ways to learn in the {PLATO} computer education system, 1959–1976},
	volume = {52},
	issn = {0046-760X},
	url = {https://doi.org/10.1080/0046760X.2022.2141353},
	doi = {10.1080/0046760X.2022.2141353},
	shorttitle = {A little history of e-learning},
	abstract = {The differences between computer-mediated and in-person learning are of increasing interest to educators, both with the rise of fully online education offerings and the move to ‘blended learning’ when teachers use computer-mediated learning to supplement and extend classroom activities. This paper offers a narrative history of the world’s first computer learning system, {PLATO}, developed at the University of Illinois between 1959 and 1976. The {PLATO} experience prompted discussions regarding the nature of e-learning among the developers that have since become a ubiquitous part of our educational discourse. While the technical story of {PLATO} and its place in the development of cyberculture has been told, the educational story has not. This paper discusses the ways in which educators using {PLATO} gradually discovered that their teaching and their students’ learning could be different. It analyses the implications of these insights for the emergence of e-learning pedagogies in subsequent decades.},
	pages = {905--936},
	number = {6},
	journaltitle = {History of Education},
	author = {Cope, Bill and Kalantzis, Mary},
	urldate = {2024-01-05},
	date = {2023-11-02},
	keywords = {computer-mediated learning, e-learning, education technology, instructional design, pedagogy},
}

@article{ben-ari_constructivism_1998,
	title = {Constructivism in computer science education},
	volume = {30},
	issn = {0097-8418},
	doi = {10.1145/274790.274308},
	abstract = {Constructivism is a theory of learning which claims that students construct knowledge rather than merely receive and store knowledge transmitted by the teacher. Constructivism has been extremely influential in science and mathematics education, but not in computer science education ({CSE}). This paper surveys constructivism in the context of {CSE}, and shows how the theory can supply a theoretical basis for debating issues and evaluating proposals.},
	pages = {257--261},
	number = {1},
	journaltitle = {{SIGCSE} Bulletin (Association for Computing Machinery, Special Interest Group on Computer Science Education)},
	author = {Ben-Ari, M.},
	date = {1998},
	annotation = {Cited By :158},
	file = {Snapshot:/home/vbettachini/storage/Zotero/storage/ZQZH6UUF/display.html:text/html;Submitted Version:/home/vbettachini/storage/Zotero/storage/F7EHREUZ/Ben-Ari - 1998 - Constructivism in computer science education.pdf:application/pdf},
}

@article{solomon_history_2020,
	title = {History of Logo},
	volume = {4},
	issn = {2475-1421},
	url = {https://dl.acm.org/doi/10.1145/3386329},
	doi = {10.1145/3386329},
	abstract = {Logo is more than a programming language. It is a learning environment where children explore mathematical ideas and create projects of their own design. Logo, the first computer language explicitly designed for children, was invented by Seymour Papert, Wallace Feurzeig, Daniel Bobrow, and Cynthia Solomon in 1966 at Bolt, Beranek and Newman, Inc. ({BBN}).
            Logo’s design drew upon two theoretical frameworks: Jean Piaget’s constructivism and Marvin Minsky’s artificial intelligence research at {MIT}. One of Logo’s foundational ideas was that children should have a powerful programming environment. Early Lisp served as a model with its symbolic computation, recursive functions, operations on linked lists, and dynamic scoping of variables.
            Logo became a symbol for change in elementary mathematics education and in the nature of school itself. The search for harnessing the computer’s potential to provide new ways of teaching and learning became a central focus and guiding principle in the Logo language development as it encompassed a widening scope that included natural language, music, graphics, animation, story telling, turtle geometry, robots, and other physical devices.},
	pages = {1--66},
	issue = {{HOPL}},
	journaltitle = {Proceedings of the {ACM} on Programming Languages},
	shortjournal = {Proc. {ACM} Program. Lang.},
	author = {Solomon, Cynthia and Harvey, Brian and Kahn, Ken and Lieberman, Henry and Miller, Mark L. and Minsky, Margaret and Papert, Artemis and Silverman, Brian},
	urldate = {2024-01-05},
	date = {2020-06-14},
	langid = {english},
	file = {Solomon et al. - 2020 - History of Logo.pdf:/home/vbettachini/storage/Zotero/storage/ET8FBPWB/Solomon et al. - 2020 - History of Logo.pdf:application/pdf},
}

@inproceedings{kay_early_1993,
	title = {The early history of smalltalk},
	isbn = {978-0-89791-570-0},
	doi = {10.1145/154766.155364},
	abstract = {Most ideas come from previous ideas. The sixties, particularly in the {ARPA} community, gave rise to a host of notions about "human-computer symbiosis'' through interactive time-shared computers, graphics screens and pointing devices. Advanced computer languages were invented to simulate complex systems such as oil refineries and semi-intelligent behavior. The soon to follow paradigm shift of modern personal computing, overlapping window interfaces, and object-oriented design came from seeing the work of the sixties as something more than a "better o(d thing". That is, more than a better way: to do mainframe computing; for end-users to invoke functionality; to make data structures more abstract. Instead the promise of exponential growth in computing/S/volume demanded that the sixties be regarded as "almost a new thing" and to find out what the actual "new things" might be. For example, one would compute with a handheld "Dynabook" in a way that would not be possible on a shared mainframe; millions of potential users meant that the user interface would have to become a learning environment along the lines of Montessori and Bruner; and needs for large scope, reduction in complexity, and end-user literacy would require that data and control structures be done away with in favor of a more biological scheme of protected universal cells interacting only through messages that could mimic any desired behavior. Early Smalltalk was the first complete realization of these new points of view as parented by its many predecessors in hardware, language and user interface design. It became the exemplar of the new computing, in part, because we were actually trying for a qualitative shift in belief structures-a new Kuhnian paradigm in the same spirit as the invention of the printing press-and thus took highly extreme positions which almost forced these new styles to be invented.},
	eventtitle = {2nd {ACM} {SIGPLAN} Conference on History of Programming Languages, {HOPL} 1993},
	pages = {69--95},
	author = {Kay, A.C.},
	date = {1993},
	annotation = {Cited By :97},
	file = {Full Text:/home/vbettachini/storage/Zotero/storage/83LGWZWV/Kay - 1993 - The early history of smalltalk.pdf:application/pdf;Snapshot:/home/vbettachini/storage/Zotero/storage/HZMQNQJS/display.html:text/html},
}

@book{cornelius_lanczos_variational_1952,
	title = {The Variational Principles of Mechanics},
	publisher = {University of Toronto press},
	author = {{Cornelius Lanczos}},
	date = {1952},
	file = {Cornelius Lanczos - 1952 - The Variational Principles of Mechanics.djvu:/home/vbettachini/storage/Zotero/storage/W55MREIW/Cornelius Lanczos - 1952 - The Variational Principles of Mechanics.djvu:image/vnd.djvu},
}

@online{ams,
	title = {AMS Style Guide. American Mathematical Society},
	url = {https://www.ams.org/arc/styleguide/index.html},
	urldate = {2023-09-29},
}

@inproceedings{mirasso-raichman,
  author       = {Mirasso, A and Raichman, S. and Totter, E.},
  title        = {Articulación de estratégias y recursos para el aprendizaje de métodos numéricos en ingeniería},
  date         = 2014,
  booktitle    = {Mecánica Computacional Vol XXXIII},
  booktitleaddon= {XXI Congreso sobre Métodos Numéricos y sus Aplicaciones},
  location     = {Bariloche, Argentina},
  pages        = {2099-2109},
}

@article{caligaris-rodriguez,
author = {Caligaris, Marta and Rodríguez, Georgina and Favieri, Adriana and Laugero, Lorena},
year = {2018},
month = {02},
pages = {30-40},
title = {Desarrollo de habilidades matemáticas durante la resolución numérica de problemas de valor inicial usando recursos tecnológicos},
volume = {14},
journaltitle = {Revista Educación en Ingeniería},
publisher = {Asociación Colombiana de Facultades de Ingeniería - ACOFI},
doi = {10.26507/rei.v14n27.928}
}

@article{perkel_programming_2015,
	title = {Programming: Pick up Python},
	volume = {518},
	rights = {2015 Springer Nature Limited},
	issn = {1476-4687},
	url = {https://www.nature.com/articles/518125a},
	doi = {10.1038/518125a},
	shorttitle = {Programming},
	abstract = {A powerful programming language with huge community support.},
	pages = {125--126},
	number = {7537},
	journaltitle = {Nature},
	author = {Perkel, Jeffrey M.},
	urldate = {2024-01-08},
	date = {2015-02},
	langid = {english},
	note = {Number: 7537
Publisher: Nature Publishing Group},
	keywords = {Computer science, Databases, Research management},
	file = {Full Text PDF:/home/vbettachini/storage/Zotero/storage/6SS6AJTS/Perkel - 2015 - Programming Pick up Python.pdf:application/pdf},
}

@Article{barba_cfd_2018,
  author       = {Barba, Lorena A. and Forsyth, Gilbert F.},
  date         = {2018-11-12},
  journaltitle = {Journal of Open Source Education},
  title        = {{CFD} Python: the 12 steps to Navier-Stokes equations},
  doi          = {10.21105/jose.00021},
  issn         = {2577-3569},
  number       = {16},
  pages        = {21},
  url          = {https://jose.theoj.org/papers/10.21105/jose.00021},
  urldate      = {2023-02-13},
  volume       = {2},
  abstract     = {Barba et al., (2018). {CFD} Python: the 12 steps to Navier-Stokes equations. Journal of Open Source Education, 1(9), 21, https://doi.org/10.21105/jose.00021},
  file         = {Full Text PDF:/home/vbettachini/storage/Zotero/storage/GJBFBKXV/Barba and Forsyth - 2018 - CFD Python the 12 steps to Navier-Stokes equation.pdf:application/pdf},
  journal      = {Journal of Open Source Education},
  langid       = {english},
  publisher    = {The Open Journal},
  shorttitle   = {{CFD} Python},
}

@article{vallejo_google_2022,
	title = {Google Colab and Virtual Simulations: Practical e-Learning Tools to Support the Teaching of Thermodynamics and to Introduce Coding to Students},
	volume = {7},
	issn = {2470-1343, 2470-1343},
	url = {https://pubs.acs.org/doi/10.1021/acsomega.2c00362},
	doi = {10.1021/acsomega.2c00362},
	shorttitle = {Google Colab and Virtual Simulations},
	abstract = {Various studies have reported the versatility and great scope of programming tools in all areas of knowledge. Coding is generally of paramount importance to chemistry students regardless of whether they intend to work with theoretical chemistry. Google Colab notebooks can introduce students to programming concepts and could be a convenient tool to assist in the chemistry teaching process. In this article, we implemented Google Colab notebooks to aid in the teaching of thermodynamics in a physical chemistry class. We presented six notebooks, covering introductory concepts of both coding and thermodynamics as a set of learning objects that can be useful in a virtual learning environment. In addition, in some of the notebooks, we included a step-by-step guide on how to run virtual lab simulations. The Colab notebooks were created for students without previous experience in programming. All of the Colab notebooks contain exercises of the activities and the solutions of the proposed exercises. Furthermore, all of the Colab notebooks can be modiﬁed and downloaded from the Github repository. Finally, we used the Python programming language and Colab because they are free and widely used by the academic community.},
	pages = {7421--7429},
	number = {8},
	journaltitle = {{ACS} Omega},
	shortjournal = {{ACS} Omega},
	author = {Vallejo, William and Díaz-Uribe, Carlos and Fajardo, Catalina},
	urldate = {2023-09-29},
	date = {2022-03-01},
	langid = {english},
	file = {Vallejo et al. - 2022 - Google Colab and Virtual Simulations Practical e-.pdf:/home/vbettachini/storage/Zotero/storage/CDRGEZUY/Vallejo et al. - 2022 - Google Colab and Virtual Simulations Practical e-.pdf:application/pdf},
}

@article{weiss_creative_2021,
	title = {A Creative Commons Textbook for Teaching Scientific Computing to Chemistry Students with Python and Jupyter Notebooks},
	volume = {98},
	issn = {0021-9584},
	url = {https://doi.org/10.1021/acs.jchemed.0c01071},
	doi = {10.1021/acs.jchemed.0c01071},
	abstract = {Scientific computing and computer literacy are increasingly important skills for chemistry students to learn, but despite this need, there is an absence of chemistry-specific texts available for teaching the subject. This article introduces a freely available textbook released under a Creative Commons license for use in an undergraduate scientific computing chemistry course teaching students basic Python programming; advanced skills in the processing, visualization, and analysis of data; and the coding of basic simulations. Subjects include basic programming, signal processing, machine learning, {NMR} data processing, and image analysis among others. The book is written to teach the subject using Python, Jupyter notebooks, and the {SciPy} stack which are all open source and cross-platform software; the text assumes no previous computer programming background from the students. This article provides descriptions and philosophy behind the structure and content of the book along with insights and advice based on its use in an undergraduate course.},
	pages = {489--494},
	number = {2},
	journaltitle = {Journal of Chemical Education},
	shortjournal = {J. Chem. Educ.},
	author = {Weiss, Charles J.},
	urldate = {2024-01-08},
	date = {2021-02-09},
	note = {Publisher: American Chemical Society},
}

@online{laureline_duvillard_using_nodate,
	title = {Using code to better understand the physics behind equations},
	url = {https://www.epfl.ch/education/educational-initiatives/jupyter-notebooks-for-education/teachers-experience-with-jupyter-notebooks/using-code-to-better-understand-the-physics-behind-equations/},
	abstract = {Learn how to design exercise worksheets in Jupyter notebooks Share on},
	titleaddon = {{EPFL}},
	author = {{Laureline Duvillard}},
	urldate = {2024-01-08},
	langid = {british},
	file = {Snapshot:/home/vbettachini/storage/Zotero/storage/3D2SKZ8C/using-code-to-better-understand-the-physics-behind-equations.html:text/html},
}

@article{oflaherty_use_2015,
	title = {The use of flipped classrooms in higher education: A scoping review},
	volume = {25},
	issn = {1096-7516},
	url = {https://www.sciencedirect.com/science/article/pii/S1096751615000056},
	doi = {10.1016/j.iheduc.2015.02.002},
	shorttitle = {The use of flipped classrooms in higher education},
	abstract = {There is increasing pressure for Higher Education institutions to undergo transformation, with education being seen as needing to adapt in ways that meet the conceptual needs of our time. Reflecting this is the rise of the flipped or inverted classroom. The purpose of this scoping review was to provide a comprehensive overview of relevant research regarding the emergence of the flipped classroom and the links to pedagogy and educational outcomes, identifying any gaps in the literature which could inform future design and evaluation. The scoping review is underpinned by the five-stage framework Arksey and O'Malley. The results indicate that there is much indirect evidence emerging of improved academic performance and student and staff satisfaction with the flipped approach but a paucity of conclusive evidence that it contributes to building lifelong learning and other 21st Century skills in under-graduate education and post-graduate education.},
	pages = {85--95},
	journaltitle = {The Internet and Higher Education},
	shortjournal = {The Internet and Higher Education},
	author = {O'Flaherty, Jacqueline and Phillips, Craig},
	urldate = {2023-03-13},
	date = {2015-04-01},
	langid = {english},
	keywords = {Educational outcomes, Engagement, Face to face teaching, Flipped classroom, Higher education, Scoping review},
	file = {ScienceDirect Full Text PDF:/home/vbettachini/storage/Zotero/storage/2SI5LX9L/O'Flaherty and Phillips - 2015 - The use of flipped classrooms in higher education.pdf:application/pdf;ScienceDirect Snapshot:/home/vbettachini/storage/Zotero/storage/JNIXM526/S1096751615000056.html:text/html},
}

@online{noauthor_flipped_2024,
	title = {Flipped Classroom {\textbar} Center for Teaching \& Learning},
	url = {https://ctl.utexas.edu/instructional-strategies/flipped-classroom},
	urldate = {2024-01-09},
	date = {2024},
	file = {Flipped Classroom | Center for Teaching & Learning:/home/vbettachini/storage/Zotero/storage/Z7MFGW5A/flipped-classroom.html:text/html},
}

@book{landau,
  author       = {Landau, L.D. and Lifshitz, E.M.},
  title        = {Mecánica},
  date         = 1994,
  edition      = 1,
  publisher    = {Reverté},
  location     = {Ciudad de México, México},
}

@Article{sympy,
  author   = {Meurer, Aaron and Smith, Christopher P. and Paprocki, Mateusz and \v{C}ert\'{i}k, Ond\v{r}ej and Kirpichev, Sergey B. and Rocklin, Matthew and Kumar, AMiT and Ivanov, Sergiu and Moore, Jason K. and Singh, Sartaj and Rathnayake, Thilina and Vig, Sean and Granger, Brian E. and Muller, Richard P. and Bonazzi, Francesco and Gupta, Harsh and Vats, Shivam and Johansson, Fredrik and Pedregosa, Fabian and Curry, Matthew J. and Terrel, Andy R. and Rou\v{c}ka, \v{S}t\v{e}p\'{a}n and Saboo, Ashutosh and Fernando, Isuru and Kulal, Sumith and Cimrman, Robert and Scopatz, Anthony},
  title    = {SymPy: symbolic computing in Python},
  doi      = {10.7717/peerj-cs.103},
  issn     = {2376-5992},
  pages    = {e103},
  url      = {https://doi.org/10.7717/peerj-cs.103},
  volume   = {3},
  abstract = {SymPy is an open source computer algebra system written in pure Python. It is built with a focus on extensibility and ease of use, through both interactive and programmatic applications. These characteristics have led SymPy to become a popular symbolic library for the scientific Python ecosystem. This paper presents the architecture of SymPy, a description of its features, and a discussion of select submodules. The supplementary material provide additional examples and further outline details of the architecture and features of SymPy.},
  journal  = {PeerJ Computer Science},
  keywords = {Python, Computer algebra system, Symbolics},
  month    = jan,
  year     = {2017},
}

@Article{numpy,
 title         = {Array programming with {NumPy}},
 author        = {Charles R. Harris and K. Jarrod Millman and St{\'{e}}fan J.
                 van der Walt and Ralf Gommers and Pauli Virtanen and David
                 Cournapeau and Eric Wieser and Julian Taylor and Sebastian
                 Berg and Nathaniel J. Smith and Robert Kern and Matti Picus
                 and Stephan Hoyer and Marten H. van Kerkwijk and Matthew
                 Brett and Allan Haldane and Jaime Fern{\'{a}}ndez del
                 R{\'{i}}o and Mark Wiebe and Pearu Peterson and Pierre
                 G{\'{e}}rard-Marchant and Kevin Sheppard and Tyler Reddy and
                 Warren Weckesser and Hameer Abbasi and Christoph Gohlke and
                 Travis E. Oliphant},
 year          = {2020},
 month         = sep,
 journal       = {Nature},
 volume        = {585},
 number        = {7825},
 pages         = {357--362},
 doi           = {10.1038/s41586-020-2649-2},
 publisher     = {Springer Science and Business Media {LLC}},
 url           = {https://doi.org/10.1038/s41586-020-2649-2}
}

@ARTICLE{SciPy,
  author  = {Virtanen, Pauli and Gommers, Ralf and Oliphant, Travis E. and
            Haberland, Matt and Reddy, Tyler and Cournapeau, David and
            Burovski, Evgeni and Peterson, Pearu and Weckesser, Warren and
            Bright, Jonathan and {van der Walt}, St{\'e}fan J. and
            Brett, Matthew and Wilson, Joshua and Millman, K. Jarrod and
            Mayorov, Nikolay and Nelson, Andrew R. J. and Jones, Eric and
            Kern, Robert and Larson, Eric and Carey, C J and
            Polat, {\.I}lhan and Feng, Yu and Moore, Eric W. and
            {VanderPlas}, Jake and Laxalde, Denis and Perktold, Josef and
            Cimrman, Robert and Henriksen, Ian and Quintero, E. A. and
            Harris, Charles R. and Archibald, Anne M. and
            Ribeiro, Ant{\^o}nio H. and Pedregosa, Fabian and
            {van Mulbregt}, Paul and {SciPy 1.0 Contributors}},
  title   = {{{SciPy} 1.0: Fundamental Algorithms for Scientific
            Computing in Python}},
  journal = {Nature Methods},
  year    = {2020},
  volume  = {17},
  pages   = {261--272},
  adsurl  = {https://rdcu.be/b08Wh},
  doi     = {10.1038/s41592-019-0686-2},
}

@Article{matplotlib,
  Author    = {Hunter, J. D.},
  Title     = {Matplotlib: A 2D graphics environment},
  Journal   = {Computing in Science \& Engineering},
  Volume    = {9},
  Number    = {3},
  Pages     = {90--95},
  abstract  = {Matplotlib is a 2D graphics package used for Python for
  application development, interactive scripting, and publication-quality
  image generation across user interfaces and operating systems.},
  publisher = {IEEE COMPUTER SOC},
  doi       = {10.1109/MCSE.2007.55},
  year      = 2007
}

@conference{Kluyver2016jupyter,
Title = {Jupyter Notebooks -- a publishing format for reproducible computational workflows},
Author = {Thomas Kluyver and Benjamin Ragan-Kelley and Fernando P{\'e}rez and Brian Granger and Matthias Bussonnier and Jonathan Frederic and Kyle Kelley and Jessica Hamrick and Jason Grout and Sylvain Corlay and Paul Ivanov and Dami{\'a}n Avila and Safia Abdalla and Carol Willing},
Booktitle = {Positioning and Power in Academic Publishing: Players, Agents and Agendas},
Editor = {F. Loizides and B. Schmidt},
Organization = {IOS Press},
Pages = {87 - 90},
Year = {2016}
} 

@online{markdown,
  author       = {Gruber, J.},
  title        = {Daring Fireball},
  url          = {https://daringfireball.net/projects/markdown/},
  date         = {2023-09-28},
}

@Online{google_llc_using_2021,
  author  = {{Google LLC}},
  date    = {2021},
  title   = {Using Google Colab with {GitHub}},
  url     = {https://colab.research.google.com/github/googlecolab/colabtools/blob/master/notebooks/colab-github-demo.ipynb#scrollTo=K-NVg7RjyeTk},
  urldate = {2021-06-12},
  file    = {Snapshot:/home/vbettachini/storage/Zotero/storage/LRYMCKP8/colab-github-demo.html:text/html},
}

@online{repositorio-victor,
    author       = {Bettachini, V. A.},
	title = {Repositorio de la asignatura Mecánica General},
	url = {https://github.com/bettachini/UNLaM_MecanicaGeneral/},
}

@online{creative,
    author       = {Creative Commons},
	title = {Atribución-NoComercial-CompartirIgual 4.0 Internacional},
	url = {https://creativecommons.org/licenses/by-nc-sa/4.0/deed.es},
}